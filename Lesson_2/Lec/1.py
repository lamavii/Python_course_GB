#Строгая динамическая типизация(Это означает что тип объекта изменить невозможно,
# он строго задаётся при создании объекта)

1) Функция type(object)
Возвращает класс объекта, его тип

a=5
print(type(a))
a = "hello world" print(type(a))
a = 42.0 * 3.141592 / 2.71828 print(type(a))

2)Функция id(object)
Возвращает адрес объекта в оперативной памяти


a = "hello world"
print(type(a), id(a))

3) Функция isinstance(object, classinfo)
Принимает на вход объект и класс и возвращает истину, если объект является
экземпляром прямого или косвенного подкласса

data = True
print(isinstance(data, int))

4)Оператор is
Сравнивает пару объектов на идентичность
num = 2 + 2 * 2
digit = 36 / 6
print(num == digit)
print(num is digit)

#Изменяемые и неизменяемые типы данных
Изменяемые: Последовательности: list, bytearray
Множества: frozenset
Отображения: dict

Неизменяемые:
Числа: int, bool, float, complex
Последовательности: str, tuple, bytes
Множества: set

#Чтобы проверить
Хеш — это криптографическая функция хеширования, которую обычно называют просто хэшем.
Хеш — функция представляет собой алгоритм, который может
преобразовать произвольный массив данных в набор бит фиксированной длины.
1)Функция hash(object)
Возвращает hash объекта в виде целого числа

x= 42
y = 'text'
z = 3.1415
print(hash(x), hash(y), hash(z))
my_list = [x, y, z]
print(hash(my_list))  # получим ошибку, т.к. list изменяемый

